/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Ola-Mola' at '11/5/16 5:36 PM' with Gradle 2.13
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.13/userguide/tutorial_java_projects.html
 */

apply plugin: 'idea'
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.

    jcenter()


    maven {url "https://repository.jboss.org/nexus/content/repositories/releases/"}
    maven {url "http://download.osgeo.org/webdav/geotools" }
    maven {url "http://www.hibernatespatial.org/repository"}
    mavenCentral()

}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile files ('/Users/Ola-Mola/Downloads/gdal-2.1.2/swig/java/gdal.jar')
    compile group: 'net.postgis', name: 'postgis-jdbc', version: '2.1.7.2'

    compile files ('/Users/Ola-Mola/Documents/concave_hull/concave_hull.jar')

    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile 'commons-io:commons-io:2.5'

// https://mvnrepository.com/artifact/org.gdal/gdal
    //compile 'org.gdal:gdal:2.1.2'


    compile 'org.postgresql:postgresql:9.4.1212.jre7'

//    complile 'org.hibernate:hibernate-core:5.2.6.Final'
    //compile group: 'org.hibernate', name: 'hibernate-core', version: '4.3.5.Final'
    compile 'org.hibernate:hibernate-core:4.3.5.Final'
    compile 'org.hibernate:hibernate-spatial:5.1.0.Final'
    // https://mvnrepository.com/artifact/org.hibernate/hibernate-spatial
  //  compile 'org.hibernate:hibernate-spatial:5.0.0.Beta2'


    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
